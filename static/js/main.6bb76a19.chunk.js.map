{"version":3,"sources":["pages/HomePage/HomePage.page.js","pages/SigninPage/SigninPage.page.js","pages/SignupPage/SignupPage.page.js","pages/NotFoundPage/NotFoundPage.page.js","component/carditem/CardItem.component.js","pages/AddPage/AddPage.page.js","component/header/Header.component.js","pages/WatchedPage/WatchedPage.page.js","pages/WatchlistPage/WatchlistPage.page.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","SigninPage","SignupPage","NotFoundPage","CardItem","props","addToWatch","test","addWatchList","addToWatched","addWatched","className","alt","src","poster_path","height","style","fontSize","fontFamily","title","undefined","popularity","String","substring","release_date","onClick","watchedDelete","watchListDelete","where","AddPage","useState","movies","state","setState","counter","setCounter","handlSearch","e","a","fetch","target","value","then","response","json","data","error","finalList","results","map","movie","hasOwnProperty","filter","item","catch","console","log","onSubmit","preventDefault","type","onChange","defaultValue","sort","sortedList","b","parseInt","disabled","display","i","watched","id","watchList","key","overview","Header","listStyle","width","backgroundColor","margin","padding","marginBottom","to","float","WatchedPage","WatchlistPage","App","_add","new_item","push","exact","path","component","old_item","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6bb76a19.chunk.js","sourcesContent":["import React from 'react'\r\nimport './HomePage.style.css'\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <div>\r\n      <h1>HomePage</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './SigninPage.style.css'\r\n\r\nexport default function SigninPage() {\r\n  return (\r\n    <div>\r\n      SigninPage\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './SignupPage.style.css'\r\n\r\nexport default function SignupPage() {\r\n  return (\r\n    <div>\r\n      SignupPage\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFoundPage() {\r\n  return (\r\n    <div>\r\n      NotFoundPage\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport \"./CardItem.css\"\r\n\r\nexport default function CardItem(props) {\r\n  const addToWatch = () => {props.test();props.addWatchList(props)}\r\n  const addToWatched = () => {props.test();props.addWatched(props)}\r\n  const watchedDelete = () => {props.test(); props.watchedDelete(props)}\r\n  const watchListDelete = () => {props.test();props.watchListDelete(props)}\r\n    return (\r\n      <div className=\"carditem-container\">\r\n        <div>{\r\n          <img alt=\"movie poster\" src={props.poster_path == null ? 'https://www.westernheights.k12.ok.us/wp-content/uploads/2020/01/No-Photo-Available.jpg'\r\n          : `http://image.tmdb.org/t/p/w185${props.poster_path}` } height=\"150px\"/>}\r\n        </div>\r\n\r\n      <div className=\"carditem-info-container\">\r\n          <p style={{fontSize:\"15px\",fontFamily:\"cursive\",}}>\r\n          {(props.title === 'UnAvailable' || props.title === undefined) ? 'UnAvailable' : props.title} \r\n          </p>     \r\n          \r\n          <p style={{fontSize:\"13px\",fontFamily:\"cursive\",}}>\r\n          Popularity : {props.popularity === 'UnAvailable' ? 'UnAvailable' : String(props.popularity).substring(0,4)}\r\n          </p>\r\n\r\n          <p style={{fontSize:\"12px\",fontFamily:\"cursive\",}}>\r\n          Release Date : {props.release_date === '0000' ? 'UnAvailable' : String(props.release_date).substring(0,4)}\r\n          </p> \r\n        \r\n          </div>\r\n          {props.addWatched === 'unAvailable' ? //watchedPage\r\n          <div>\r\n            <button onClick={addToWatch} >Add to WatchList</button>  \r\n            <button onClick={watchedDelete} >Delete</button>\r\n          </div>\r\n          :  props.addWatchList === 'unAvailable' ? //watchlistPage\r\n          <div>\r\n          <button onClick={addToWatched} >Watched</button>\r\n            <button onClick={watchListDelete} >Delete</button>  \r\n          </div>\r\n          :  \r\n          <div>\r\n            <button  className={props.where === 'watchList' ? 'disabled-button': null} onClick={addToWatch} >Add to WatchList</button>  \r\n            <button className={props.where === 'watched' ? 'disabled-button': null} onClick={addToWatched} >Watched</button>\r\n          </div>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport \"./AddPage.style.css\";\r\nimport CardItem from '../../component/carditem/CardItem.component';\r\n\r\nexport default function AddPage(props) {\r\n  const [state,setState] = useState({movies : []})\r\n  \r\n  const [counter,setCounter] = useState(0)\r\n  const test = () => {setCounter(counter+1)}\r\n\r\n  const handlSearch = async (e)=>{\r\n    await fetch(`https://api.themoviedb.org/3/search/movie?api_key=3114fdf88a3864491975a74f60ea1c7c&language=en-us&page=1&include_adult=false&query=${e.target.value}`)\r\n    .then(response => response.json())\r\n    .then(data =>{\r\n\r\n      if(!data.error){\r\n        const cleanData = data.results.map(function(movie){\r\n          if(movie.hasOwnProperty('release_date') === false || movie.release_date ==='')\r\n           return movie['release_date'] = '0000'\r\n          \r\n          if(movie.hasOwnProperty('poster_path') === false)\r\n            return movie['poster_path'] = 'UnAvailable'\r\n\r\n          if(movie.hasOwnProperty('title') === false)\r\n            return movie['title'] = 'UnAvailable'\r\n          \r\n          if(movie.hasOwnProperty('popularity') === false)\r\n            return movie['popularity'] = 'UnAvailable'\r\n\r\n          if(movie.hasOwnProperty('overview') === false)\r\n            return movie['overview'] = 'UnAvailable' \r\n\r\n          return movie\r\n        })\r\n        const finalList = cleanData.filter((item)=> item !== '0000')\r\n        setState({movies : finalList})\r\n      }\r\n      else\r\n        setState({movies : []})\r\n      })\r\n    .catch((error)=>console.log('error'))\r\n  }\r\n\r\n  const handlSort = (e)=>{\r\n    setState({ sort: e.target.value })\r\n    if(state.movies){\r\n      const sortedList = state.movies.sort(\r\n        (a,b) => {\r\n          if(e.target.value === 'Newest')\r\n            return parseInt(b.release_date.substring(0,4)) - parseInt(a.release_date.substring(0,4))\r\n          if(e.target.value === 'Oldest')\r\n            return parseInt(a.release_date.substring(0,4)) - parseInt(b.release_date.substring(0,4))\r\n          return parseInt(a.release_date.substring(0,4)) + parseInt(b.release_date.substring(0,4))\r\n        }\r\n      )\r\n      setState({movies : sortedList})\r\n    }\r\n  }\r\n  \r\n  const handlSubmit = (e) =>{\r\n    e.preventDefault()\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n    <h1>Movies Search</h1>\r\n      <div className=\"searchrea-container\">\r\n        <form onSubmit={handlSubmit}>\r\n            <input type=\"search\" className=\"searcharea-input\" onChange={handlSearch } />\r\n\r\n            <select className='searcharea-option' defaultValue=\"Sort\"  onChange={handlSort}>\r\n              <option className=\"searcharea-option-items\" disabled style={{\r\n                display:\"none\"\r\n              }} value=\"Sort\" >Sort</option>\r\n              <option className=\"searcharea-option-items\" value=\"Newest\" >Newest</option>\r\n              <option className=\"searcharea-option-items\" value=\"Oldest\" >Oldest</option>\r\n            </select>\r\n        </form>\r\n      </div> \r\n        <div className=\"collectionlist-container\">\r\n          { (state.movies)? \r\n            state.movies.map(function (item,i){\r\n              let where = 'none'\r\n              props.state.watched.map((movie)=>{\r\n                if(movie.id === item.id){\r\n                  where = 'watched'\r\n                  console.log(where)\r\n                }\r\n                return item\r\n              })\r\n              props.state.watchList.map((movie)=>{\r\n                if(movie.id === item.id){\r\n                  where = 'watchList'\r\n                  console.log(where)\r\n                }\r\n                return item\r\n              })\r\n              return <CardItem\r\n                        key = {i}\r\n                        id = {item.id}\r\n                        title = {item.title}\r\n                        poster_path = {item.poster_path}\r\n                        release_date = {item.release_date}\r\n                        popularity = {item.popularity}\r\n                        overview = {item.overview}\r\n                        addWatchList ={props.addWatchList}\r\n                        addWatched = {props.addWatched}\r\n                        test = {test}\r\n                        where = {where}\r\n                        />\r\n              }): (null)} \r\n        </div>       \r\n      </div>\r\n  )\r\n}","import React from 'react'\r\nimport './Header.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div>\r\n      <ul style={{listStyle:'none', width:'100%' , backgroundColor:'#6495ed', margin:'0px',padding:'10px', marginBottom:'30px'}}> \r\n\r\n        <li className='active' style={{display:'inline'}}><Link to='/'>\r\n          ZMovies-Forum\r\n        </Link></li>\r\n\r\n        <li style={{display:\"inline\"}}><Link to='/watchlist'>\r\n          WatchList\r\n        </Link></li>\r\n\r\n        <li style={{display:\"inline\"}}><Link to='/watched'>\r\n          Watched\r\n        </Link></li>  \r\n\r\n        <li style={{display:\"inline\",float:'right'}}><Link to='/add'>\r\n          +Add\r\n        </Link></li>    \r\n\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nimport CardItem from '../../component/carditem/CardItem.component'\r\n\r\nexport default function WatchedPage(props) {\r\n  const [counter,setCounter] = useState(0)\r\n  const test = () => {setCounter(counter+1)}\r\n  return (\r\n    <div>\r\n   { console.log('re-rendered')}\r\n      <h1>WatchedPage</h1>\r\n      <div className=\"collectionlist-container\">\r\n          { (props.state.watched)? \r\n            props.state.watched.map(function (item,i){\r\n              return <CardItem\r\n                        key = {i}\r\n                        id = {item.id}\r\n                        title = {item.title}\r\n                        poster_path = {item.poster_path}\r\n                        release_date = {item.release_date}\r\n                        popularity = {item.popularity}\r\n                        overview = {item.overview}\r\n                        addWatchList ={props.addWatchList}\r\n                        addWatched = 'unAvailable'\r\n                        watchListDelete = 'unAvailable'\r\n                        watchedDelete = {props.watchedDelete}\r\n                        test = {test}\r\n                        />\r\n              }): (null)}\r\n            {\r\n              // (!watched) ? console.log('stopped   ',watched) : null\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nimport CardItem from '../../component/carditem/CardItem.component'\r\n\r\nexport default function WatchlistPage(props) {\r\n  const [counter,setCounter] = useState(0)\r\n  const test = () => {setCounter(counter+1)}\r\n  return (\r\n    <div>\r\n      <h1>WatchlistPage</h1>\r\n      <div className=\"collectionlist-container\">\r\n          { (props.state.watchList)? \r\n            props.state.watchList.map(function (item,i){\r\n              return <CardItem\r\n                        key = {i}\r\n                        id = {item.id}\r\n                        title = {item.title}\r\n                        poster_path = {item.poster_path}\r\n                        release_date = {item.release_date}\r\n                        popularity = {item.popularity}\r\n                        overview = {item.overview}\r\n                        addWatchList ='unAvailable'\r\n                        addWatched = {props.addWatched}\r\n                        watchedDelete = 'unAvailable'\r\n                        watchListDelete = {props.watchListDelete}\r\n                        test = {test}\r\n                        />\r\n              }): (null)}\r\n            {\r\n              // (!props.state.watchList) ? console.log('stopped   ',props.state.watchList) : null\r\n            }\r\n        </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React,{useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router , Route, Switch} from 'react-router-dom'\n\nimport HomePage from './pages/HomePage/HomePage.page'\nimport SigninPage from './pages/SigninPage/SigninPage.page'\nimport SignupPage from './pages/SignupPage/SignupPage.page'\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage.page'\nimport AddPage from './pages/AddPage/AddPage.page';\nimport Header from './component/header/Header.component';\nimport WatchedPage from './pages/WatchedPage/WatchedPage.page';\nimport WatchlistPage from './pages/WatchlistPage/WatchlistPage.page';\n\nfunction App() {\n\n  const [state,setState] = useState({\n    watched : [],\n    watchList : []\n  })\n\n  const addWatched = (props)=>{\n    let _add = true\n    const new_item = {id:props.id, title:props.title, poster_path:props.poster_path, release_date:props.release_date, popularity:props.popularity, overview:props.overview}\n    state.watched.map((item)=>{\n      if(new_item.id === item.id)\n        _add = false\n        return item\n    })\n    if(_add){\n      state.watched.push(new_item)\n      console.log('added to watched') \n      state.watchList = state.watchList.filter(item =>{if(item.id === new_item.id)console.log('deleted from watchlist'); return item.id !== new_item.id })\n    }\n    else console.log('duplicated')\n  }\n  const addWatchList = (props)=>{\n    let _add = true\n    const new_item = {id:props.id, title:props.title, poster_path:props.poster_path, release_date:props.release_date, popularity:props.popularity, overview:props.overview}\n    state.watchList.map((item)=>{\n      if(new_item.id === item.id)\n        _add = false\n        return item\n    })\n    if(_add){\n      state.watchList.push(new_item)\n      console.log('added to watchlist') \n      state.watched = state.watched.filter(item =>{if(item.id === new_item.id)console.log('deleted from watched'); return item.id !== new_item.id })\n    }\n    else console.log('duplicated')\n  }\n\n  const watchedDelete = (props) =>{\n    const old_item = {id:props.id, title:props.title, poster_path:props.poster_path, release_date:props.release_date, popularity:props.popularity, overview:props.overview}\n    state.watched = state.watched.filter(item =>{console.log('deleted from watched'); return item.id !== old_item.id })\n  }\n  const watchListDelete = (props) =>{\n    const old_item = {id:props.id, title:props.title, poster_path:props.poster_path, release_date:props.release_date, popularity:props.popularity, overview:props.overview}\n    state.watchList = state.watchList.filter(item =>{console.log('deleted from watchlist'); return item.id !== old_item.id })\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header/>\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route exact path='/signin' component={SigninPage} />\n          <Route exact path='/signup' component={SignupPage} />\n\n          <Route exact path='/watchlist' >\n          <WatchlistPage state={state} addWatched={addWatched} watchListDelete={watchListDelete} />\n          </Route>\n\n          <Route exact path='/watched'>\n            <WatchedPage state={state} addWatchList={addWatchList} watchedDelete={watchedDelete} />\n          </Route>\n\n          <Route exact path='/add' >\n            <AddPage addWatched={addWatched} addWatchList={addWatchList} state={state} />\n          </Route>\n          <Route  path='/' component={NotFoundPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}